/*
 * This file is generated by jOOQ.
 */
package com.billa.jooq.tables.daos;


import com.billa.jooq.tables.Address;
import com.billa.jooq.tables.records.AddressRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AddressDao extends DAOImpl<AddressRecord, com.billa.jooq.tables.pojos.Address, Long> {

    /**
     * Create a new AddressDao without any configuration
     */
    public AddressDao() {
        super(Address.ADDRESS, com.billa.jooq.tables.pojos.Address.class);
    }

    /**
     * Create a new AddressDao with an attached configuration
     */
    public AddressDao(Configuration configuration) {
        super(Address.ADDRESS, com.billa.jooq.tables.pojos.Address.class, configuration);
    }

    @Override
    public Long getId(com.billa.jooq.tables.pojos.Address object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.billa.jooq.tables.pojos.Address> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Address.ADDRESS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.billa.jooq.tables.pojos.Address> fetchById(Long... values) {
        return fetch(Address.ADDRESS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.billa.jooq.tables.pojos.Address fetchOneById(Long value) {
        return fetchOne(Address.ADDRESS.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.billa.jooq.tables.pojos.Address> fetchOptionalById(Long value) {
        return fetchOptional(Address.ADDRESS.ID, value);
    }

    /**
     * Fetch records that have <code>person_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.billa.jooq.tables.pojos.Address> fetchRangeOfPersonId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Address.ADDRESS.PERSON_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>person_id IN (values)</code>
     */
    public List<com.billa.jooq.tables.pojos.Address> fetchByPersonId(Long... values) {
        return fetch(Address.ADDRESS.PERSON_ID, values);
    }

    /**
     * Fetch records that have <code>amount BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.billa.jooq.tables.pojos.Address> fetchRangeOfAmount(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Address.ADDRESS.AMOUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>amount IN (values)</code>
     */
    public List<com.billa.jooq.tables.pojos.Address> fetchByAmount(Integer... values) {
        return fetch(Address.ADDRESS.AMOUNT, values);
    }
}
